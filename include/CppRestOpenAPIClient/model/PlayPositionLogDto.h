/**
 * API Documentation
 * The API description
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.8.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * PlayPositionLogDto.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_PlayPositionLogDto_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_PlayPositionLogDto_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



/// <summary>
/// 
/// </summary>
class  PlayPositionLogDto
    : public ModelBase
{
public:
    PlayPositionLogDto();
    virtual ~PlayPositionLogDto();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// PlayPositionLogDto members

    /// <summary>
    /// 
    /// </summary>
    double getX() const;
    bool XIsSet() const;
    void unsetx();

    void setX(double value);

    /// <summary>
    /// 
    /// </summary>
    double getY() const;
    bool YIsSet() const;
    void unsety();

    void setY(double value);

    /// <summary>
    /// 
    /// </summary>
    double getZ() const;
    bool ZIsSet() const;
    void unsetz();

    void setZ(double value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getOffsetTimestamp() const;
    bool offsetTimestampIsSet() const;
    void unsetOffset_timestamp();

    void setOffsetTimestamp(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getLocation() const;
    bool locationIsSet() const;
    void unsetLocation();

    void setLocation(const utility::string_t& value);


protected:
    double m_x;
    bool m_xIsSet;
    double m_y;
    bool m_yIsSet;
    double m_z;
    bool m_zIsSet;
    int32_t m_Offset_timestamp;
    bool m_Offset_timestampIsSet;
    utility::string_t m_Location;
    bool m_LocationIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_PlayPositionLogDto_H_ */
